{"remainingRequest":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\src\\components\\select\\select-list.vue?vue&type=style&index=0&id=21a62a4c&lang=scss","dependencies":[{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\src\\components\\select\\select-list.vue","mtime":1619169822000},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1755258878741},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1755258880305},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\postcss-loader\\src\\index.js","mtime":1755258879226},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1755258878262},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1755258878262},{"path":"D:\\实训2\\springboot和vue旅游系统蓝色3322\\bysj-client\\node_modules\\vue-loader\\lib\\index.js","mtime":1755258879809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZS1zZWxlY3QtbGlzdHsNCiAgICAuc2VsZWN0LXVwZGF0ZXsNCiAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgZmxleC13cmFwOndyYXA7DQogICAgICAgID5kaXZ7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogICAgICAgIH0NCiAgICAgICAgPmRpdjpsYXN0LWNoaWxkew0KICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwcHg7DQogICAgICAgIH0NCg0KICAgIH0NCiAgICAuc2VhcmNoLWxpc3R7DQoNCiAgICB9DQp9DQo="},{"version":3,"sources":["select-list.vue"],"names":[],"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"select-list.vue","sourceRoot":"src/components/select","sourcesContent":["<template>\r\n    <div class=\"e-select-list\">\r\n        <div class=\"select-update\">\r\n            <div>\r\n                <el-select @change=\"$emit('input' , $event)\" :value=\"value\" filterable>\r\n                    <el-option :value=\"0\" label=\"请选择\"></el-option>\r\n                    <el-option :value=\"v.id\" :label=\"getLabel(v)\" v-for=\"v in list\" :key=\"v.id\"></el-option>\r\n                </el-select>\r\n            </div>\r\n            <div>\r\n                关键词：\r\n                <el-input style=\"width: 150px\" v-model=\"searchMsg.keyword\" />\r\n            </div>\r\n            <div>\r\n                <slot name=\"search\"></slot>\r\n            </div>\r\n            <!--<div class=\"search-list\" ref=\"search\">\r\n            </div>-->\r\n            <div class=\"search-btn\">\r\n                <el-button icon=\"el-icon-search\" @click=\"searchTable(true)\">\r\n                    搜索\r\n                </el-button>\r\n            </div>\r\n        </div>\r\n        <div class=\"\" v-if=\"value!=0\">\r\n            <slot>\r\n            </slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n<style type=\"text/scss\" lang=\"scss\">\r\n.e-select-list{\r\n    .select-update{\r\n        display: flex;\r\n        flex-wrap:wrap;\r\n        >div{\r\n            margin-right: 10px;\r\n        }\r\n        >div:last-child{\r\n            margin-right: 0px;\r\n        }\r\n\r\n    }\r\n    .search-list{\r\n\r\n    }\r\n}\r\n</style>\r\n<script>\r\n    import api from \"@/api\";\r\n    import { empty, isArray ,isObject} from \"@/utils/extend\";\r\n    import {findObject} from \"@/utils/utils\";\r\n\r\n    export default {\r\n        name: \"e-select-list\",\r\n        data() {\r\n            return {\r\n                list:[],\r\n                searchMsg:{\r\n                    keyword:''\r\n                }\r\n            }\r\n        },\r\n        props:{\r\n            value:[String,Number],\r\n            model:{\r\n                type:Object,\r\n                required:true\r\n            },\r\n            module:{\r\n                type:String,\r\n                required: true\r\n            },\r\n            selectUpdate:[String,Array],\r\n            searchUpdate:{\r\n                type:[String,Array],\r\n                default:''\r\n            },\r\n            showField:{\r\n                type:[String,Array]\r\n            }\r\n        },\r\n        watch: {\r\n            value(val){\r\n                this.selectOption(val);\r\n            }\r\n        },\r\n        computed: {\r\n        },\r\n        methods: {\r\n            selectOption(value){\r\n                var v = findObject(this.list , r=>r.id == value );\r\n                if( v !== false ){\r\n                    this.updateModel(v);\r\n                }else{\r\n                    if(value == 0){\r\n                        this.updateModel({});\r\n                    }else{\r\n                        this.$post(api.search.table , {id:value}).then(res=>{\r\n                            if(!empty(res) && isObject(res)){\r\n                                this.list.push(res);\r\n                                this.updateModel(res);\r\n                            }\r\n                        }).catch(err=>{\r\n                            this.$message.error(err.message)\r\n                        })\r\n                    }\r\n                }\r\n            },\r\n            updateModel(v){\r\n                var field = isArray(this.selectUpdate) ? this.selectUpdate : this.selectUpdate.split(',');\r\n                for (var i=0;i<field.length;i++)\r\n                {\r\n                    var f = field[i];\r\n                    if( f ){\r\n                        var def = /(^[0-9]+$)/.test(this.model[f]) && this.model[f].length<11 ? 0 : '';\r\n                        this.model[f] = v[f] !== undefined ? v[f] : def;\r\n                    }\r\n                }\r\n            },\r\n            getLabel(v){\r\n                var result = '';\r\n                var field = [];\r\n                if(this.showField){\r\n                    field = isArray(this.showField) ? this.showField : this.showField.split(',').filter(v=>!empty(v))\r\n                }else{\r\n                    field = isArray(this.selectUpdate) ? this.selectUpdate : this.selectUpdate.split(',')\r\n                }\r\n\r\n                //var field = isArray(this.selectUpdate) ? this.selectUpdate : this.selectUpdate.split(',')\r\n\r\n                for (var i=0;i<field.length;i++)\r\n                {\r\n                    var f = field[i];\r\n                    if(f && v[f]){\r\n                        result += v[f]+' - ';\r\n                    }\r\n                }\r\n                return result;\r\n            },\r\n            searchTable(isEmit){\r\n                var where = {};\r\n                var field = isArray(this.selectUpdate) ? this.selectUpdate : this.selectUpdate.split(',')\r\n                var ext   = isArray(this.searchUpdate) ? this.searchUpdate : this.searchUpdate.split(',')\r\n                var fs = field.concat(ext).filter(f=>f!='');\r\n                where[fs.join('|')] = [ 'like' , '%'+this.searchMsg.keyword+'%'];\r\n                this.$emit('update-where' , where);\r\n                return new Promise((resolve, reject) => {\r\n                    this.$post(api.search.select , {\r\n                        table:this.module,\r\n                        where:JSON.stringify(where)\r\n                    }).then(res=>{\r\n                        if(isEmit){\r\n                            this.$emit('input' , 0);\r\n                        }\r\n                        this.list = res;\r\n                        resolve(res)\r\n                    }).catch(err=>{\r\n                        reject(err.message);\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        created() {\r\n            this.searchTable().then(res=>{\r\n                if(this.value){\r\n                    this.selectOption(this.value)\r\n                }\r\n            });\r\n        },\r\n        mounted() {\r\n        },\r\n        destroyed() {\r\n        }\r\n    }\r\n</script>\r\n"]}]}